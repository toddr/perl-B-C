print 'hi'
>>>>
hi
######################### ^ 1 ################################
for (1,2,3) { print if /\d/ }
>>>>
123
#########################  2 ################################
$_ = "xyxyx"; %j=(1,2); s/x/$j{print("z")}/ge; print $_
>>>>
zzz2y2y2
#########################  3 ################################
$_ = "xyxyx"; %j=(1,2); s/x/$j{print("z")}/g; print $_
>>>>
z2y2y2
#########################  4 ################################
print split /a/,"bananarama"
>>>>
bnnrm
#########################  5 ################################
{ package P; sub x { print 'ya' } x }
>>>>
ya
#########################  6 ################################
@z = split /:/,"b:r:n:f:g"; print @z
>>>>
brnfg
#########################  7 ################################
sub AUTOLOAD { print 1 } &{"a"}()
>>>>
1
#########################  8 ################################
my $l_i = 3; $x = sub { print $l_i }; &$x
>>>>
3
#########################  9 ################################
my $i_i = 1;
my $foo = sub {$i_i = shift if @_};
print $i_i;
print &$foo(3),$i_i;
>>>>
133
######################### 10 ################################
$x="Cannot use"; print index $x, "Can"
>>>>
0
######################### 11 ################################
my $i_i=6; eval "print \$i_i\n"
>>>>
6
######################### 12 ################################
BEGIN { %h=(1=>2,3=>4) } print $h{3}
>>>>
4
######################### 13 ################################
open our $T,"a"; print 'ok';
>>>>
ok
######################### 14 ################################
print <DATA>
__DATA__
a
b
>>>>
a
b
######################### 15 ################################
BEGIN { tie @a, __PACKAGE__; sub TIEARRAY { bless{} } sub FETCH{1} }
print $a[1]
>>>>
1
######################### 16 ################################
my $i_ir=3; print 1 .. $i_ir
>>>>
123
######################### 17 ################################
my $h = { a=>3, b=>1 }; print sort {$h->{$a} <=> $h->{$b}} keys %$h
>>>>
ba
######################### 18 ################################
print sort { my $p; $b <=> $a } 1,4,3
>>>>
431
######################### 19 ################################
$a="abcd123";my $r=qr/\d/;print $a=~$r;
>>>>
1
######################### 20 ################################
sub skip_on_odd{next NUMBER if $_[0]% 2}NUMBER:for($i=0;$i<5;$i++){skip_on_odd($i);print $i;}
>>>>
024
######################### 21 ################################
my $fh; BEGIN { open($fh,"<","/dev/null"); } print "ok";
>>>>
ok
######################### 22 ################################
package MyMod; our $VERSION = 1.3; print "ok"
>>>>
ok
######################### 23 ################################
sub level1 {return (level2()?"fail":"ok")} sub level2{0} print level1();
>>>>
ok
######################### 24 ################################
print sort { print $i++," "; $b <=> $a } 1..4
>>>>
0 1 2 3 4321
######################### 25 ################################
sub a:lvalue{my $a=26; ${\(bless \$a)}}sub b:lvalue{${\shift}}; print ${a(b)};
>>>>
26
######################### 26 ################################
use Fcntl;print "ok" if ( &Fcntl::O_WRONLY );
>>>>
ok
######################### 27 ################################
my($fname,$tmp_fh);while(!open($tmp_fh,">",($fname=q{cctest_27.} . rand(999999999999)))){$bail++;die "Failed to create a tmp file after 500 tries" if $bail>500;}print {$tmp_fh} q{$x="ok";1;};close($tmp_fh);require $fname;unlink($fname);print $x;
>>>>
ok
######################### 28 ################################
use IO;print "ok";
>>>>
ok
######################### 29 ################################
@a=(4,6,1,0,0,1);sub range{(shift @a)..(shift @a)}print range();while(@a){print scalar(range())}
>>>>
456123E0
######################### 30 ################################
package MockShell;sub AUTOLOAD{my $p=$AUTOLOAD;$p=~s/.*:://;print(join(" ",$p,@_),";");} 
package main; MockShell::date();MockShell::who("am","i");MockShell::ls("-l");
>>>>
date;who am i;ls -l;
######################### 31 ################################
# CC entertry/jmpenv_jump/leavetry
eval{print "1"};eval{die 0};print "2\n";
>>>>
12
